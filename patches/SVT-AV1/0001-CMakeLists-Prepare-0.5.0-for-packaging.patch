From 1fa2b6c61956332ec95aae6964de88725ca29912 Mon Sep 17 00:00:00 2001
From: Christopher Degawa <ccom@randomderp.com>
Date: Fri, 21 Jun 2019 23:24:57 -0500
Subject: [PATCH] CMakeLists: Prepare 0.5.0 for packaging

Remove decoder, ctests, and coverage code
Set cflags and linker flags where appropriate
Cleanup CMakeLists

Signed-off-by: Christopher Degawa <ccom@randomderp.com>
---
 CMakeLists.txt                              | 87 +++++++--------------
 Source/App/EncApp/CMakeLists.txt            | 29 +++----
 Source/Lib/Common/ASM_AVX2/CMakeLists.txt   | 47 +++++------
 Source/Lib/Common/ASM_SSE2/CMakeLists.txt   | 32 +++-----
 Source/Lib/Common/ASM_SSE4_1/CMakeLists.txt | 39 +++------
 Source/Lib/Common/ASM_SSSE3/CMakeLists.txt  | 39 ++++-----
 Source/Lib/Common/C_DEFAULT/CMakeLists.txt  | 18 ++---
 Source/Lib/Common/Codec/CMakeLists.txt      | 27 +++----
 Source/Lib/Encoder/Codec/CMakeLists.txt     | 66 ++++++----------
 9 files changed, 140 insertions(+), 244 deletions(-)

diff --git a/CMakeLists.txt b/CMakeLists.txt
index 1855a5ba..2a2d9920 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -8,71 +8,44 @@ set(project_name "svt-av1")
 
 project(${project_name} C CXX ASM_NASM)
 
-set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/${CMAKE_BUILD_TYPE}/lib)
-set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/${CMAKE_BUILD_TYPE}/lib)
-set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/${CMAKE_BUILD_TYPE}/bin)
+set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib)
+set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib)
+set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)
 
 set(CMAKE_POSITION_INDEPENDENT_CODE ON)
 set(CMAKE_C_STANDARD 99)
 set(CAN_USE_ASSEMBLER TRUE)
-set(CMAKE_NASM_LINK_EXECUTABLE "ld -o <TARGET> <OBJECTS>")
-set(CMAKE_ASM_NASM_SOURCE_FILE_EXTENSIONS asm)
 
-
-if (${CMAKE_SYSTEM_NAME} MATCHES "Darwin")
-    set(CMAKE_ASM_NASM_OBJECT_FORMAT macho64)
-    set(CMAKE_ASM_NASM_FLAGS "-DUNIX64")
-    set(CMAKE_MACOSX_RPATH 1)
-    set(CMAKE_C_ARCHIVE_CREATE   "<CMAKE_AR> Scr <TARGET> <LINK_FLAGS> <OBJECTS>")
-    set(CMAKE_CXX_ARCHIVE_CREATE "<CMAKE_AR> Scr <TARGET> <LINK_FLAGS> <OBJECTS>")
-    set(CMAKE_C_ARCHIVE_FINISH   "<CMAKE_RANLIB> -no_warning_for_no_symbols -c <TARGET>")
-    set(CMAKE_CXX_ARCHIVE_FINISH "<CMAKE_RANLIB> -no_warning_for_no_symbols -c <TARGET>")
-endif (${CMAKE_SYSTEM_NAME} MATCHES "Darwin")
-
-if (${CMAKE_SYSTEM_NAME} MATCHES "Linux")
-    set(CMAKE_C_FLAGS "-Wall -Wextra -Wformat -Wformat-security -mavx -fstack-protector-strong -fPIE -fPIC -D_FORTIFY_SOURCE=2 ")
-    set(CMAKE_C_FLAGS_RELEASE "-O2")
-    set(CMAKE_C_FLAGS_DEBUG "-O0 -g")
-	SET(CMAKE_EXE_LINKER_FLAGS "-z noexecstack -z relro -z now -pie ")
-	SET(CMAKE_SHARED_LINKER_FLAGS "-z noexecstack -z relro -z now -pie ")
-    set(CMAKE_ASM_NASM_FLAGS "-DUNIX64")
-    set(CMAKE_ASM_NASM_FLAGS_DEBUG "-g null")
-    set(CMAKE_ASM_NASM_OBJECT_FORMAT elf64)
-endif (${CMAKE_SYSTEM_NAME} MATCHES "Linux")
-
-if(${CMAKE_SYSTEM_NAME} MATCHES "Windows")
-    set(CMAKE_EXE_LINKER_FLAGS " ")
-    set(CMAKE_SHARED_LINKER_FLAGS " ")
-    set(CMAKE_C_FLAGS_RELEASE "-O2")
+if(WIN32)
     set(CMAKE_ASM_NASM_FLAGS "-DWIN64")
-    set(CMAKE_ASM_NASM_FLAGS_DEBUG "")
-endif(${CMAKE_SYSTEM_NAME} MATCHES "Windows")
-
-include(CTest)
-
-set(COVERAGE false CACHE BOOL "For use with coveralls and GTest")
-
-# Prepare for Coveralls
-if(COVERAGE)
-    if(CMAKE_C_COMPILER_ID MATCHES "GNU|Clang")
-        set(CMAKE_C_FLAGS_DEBUG "${CMAKE_C_FLAGS_DEBUG} --coverage")
-        set(CMAKE_EXE_LINKER_FLAGS_DEBUG "${CMAKE_EXE_LINKER_FLAGS_DEBUG} --coverage")
+else()
+    set(CMAKE_ASM_NASM_FLAGS "-DUNIX64")
+    if(APPLE)
+        set(CMAKE_MACOSX_RPATH 1)
+        set(CMAKE_C_ARCHIVE_CREATE   "<CMAKE_AR> Scr <TARGET> <LINK_FLAGS> <OBJECTS>")
+        set(CMAKE_CXX_ARCHIVE_CREATE "<CMAKE_AR> Scr <TARGET> <LINK_FLAGS> <OBJECTS>")
+        set(CMAKE_C_ARCHIVE_FINISH   "<CMAKE_RANLIB> -no_warning_for_no_symbols -c <TARGET>")
+        set(CMAKE_CXX_ARCHIVE_FINISH "<CMAKE_RANLIB> -no_warning_for_no_symbols -c <TARGET>")
+    else()
+        set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} -z noexecstack -z relro -z now")
+        set(CMAKE_SHARED_LINKER_FLAGS "${CMAKE_SHARED_LINKER_FLAGS} -z noexecstack -z relro -z now")
     endif()
 endif()
 
-#set(CMAKE_MODULE_PATH ${PROJECT_SOURCE_DIR}/CMakeModules)
-#if(USE_CODE_COVERAGE AND CMAKE_COMPILER_IS_GNUCXX)
-#    include(CodeCoverage)
-#    setup_target_for_coverage(${PROJECT_NAME}_coverage ${PROJECT_TEST_NAME} coverage)
-#endif()
+if(CMAKE_C_COMPILER_ID MATCHES "GNU|Clang")
+    set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -fPIC")
+    set(CMAKE_C_FLAGS_RELEASE "${CMAKE_C_FLAGS_RELEASE} -D_FORTIFY_SOURCE=2")
+    set(CMAKE_C_FLAGS_DEBUG "${CMAKE_C_FLAGS_DEBUG} -Wall -Wextra -Wformat -Wformat-security -O0")
+elseif(MSVC)
+    set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} /MP")
+endif()
 
 # Add Subdirectories
-add_subdirectory (Source/Lib/Common)
-add_subdirectory (Source/Lib/Encoder)
-add_subdirectory (Source/App/EncApp)
-add_subdirectory (Source/Lib/Decoder)
-add_subdirectory (Source/App/DecApp)
-if (BUILD_TESTING)
-    add_subdirectory (test)
-    add_subdirectory (third_party/googletest)
-endif()
+add_subdirectory(Source/Lib/Common/Codec)
+add_subdirectory(Source/Lib/Common/C_DEFAULT)
+add_subdirectory(Source/Lib/Common/ASM_SSE2)
+add_subdirectory(Source/Lib/Common/ASM_SSSE3)
+add_subdirectory(Source/Lib/Common/ASM_SSE4_1)
+add_subdirectory(Source/Lib/Common/ASM_AVX2)
+add_subdirectory(Source/Lib/Encoder/Codec)
+add_subdirectory(Source/App/EncApp)
diff --git a/Source/App/EncApp/CMakeLists.txt b/Source/App/EncApp/CMakeLists.txt
index 65433d7f..f688e05c 100644
--- a/Source/App/EncApp/CMakeLists.txt
+++ b/Source/App/EncApp/CMakeLists.txt
@@ -2,15 +2,10 @@
 # Copyright(c) 2019 Intel Corporation
 # SPDX - License - Identifier: BSD - 2 - Clause - Patent
 #
-
 # APP Directory CMakeLists.txt
-set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${PROJECT_SOURCE_DIR}/Bin/${CMAKE_BUILD_TYPE}/)
-set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${PROJECT_SOURCE_DIR}/Bin/${CMAKE_BUILD_TYPE}/)
-set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${PROJECT_SOURCE_DIR}/Bin/${CMAKE_BUILD_TYPE}/)
 
 # Include Subdirectories
-include_directories (${PROJECT_SOURCE_DIR}/Source/API/)
-include_directories (${PROJECT_SOURCE_DIR}/Bin/${CMAKE_BUILD_TYPE}/)
+include_directories(${PROJECT_SOURCE_DIR}/Source/API/)
 
 file(GLOB all_files
     "*.h"
@@ -18,25 +13,21 @@ file(GLOB all_files
     "*.c")
 
 # App Source Files
-add_executable (SvtAv1EncApp
-    ${all_files}
-)
+add_executable(SvtAv1EncApp
+    ${all_files})
 
 #********** SET COMPILE FLAGS************
-
-if (UNIX)
+target_link_libraries(SvtAv1EncApp
+        SvtAv1Enc)
+if(UNIX)
     # Link the Encoder App
-     target_link_libraries (SvtAv1EncApp
-        SvtAv1Enc
+    target_link_libraries (SvtAv1EncApp
         pthread
         m)
 endif()
 
-if (MSVC OR MSYS OR MINGW OR WIN32)
-
-    # Link the Encoder App
-    target_link_libraries (SvtAv1EncApp
-                           SvtAv1Enc)
+if(NOT CMAKE_INSTALL_BINDIR)
+    set(CMAKE_INSTALL_BINDIR bin)
 endif()
 
-install(TARGETS SvtAv1EncApp RUNTIME DESTINATION bin)
\ No newline at end of file
+install(TARGETS SvtAv1EncApp RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR})
\ No newline at end of file
diff --git a/Source/Lib/Common/ASM_AVX2/CMakeLists.txt b/Source/Lib/Common/ASM_AVX2/CMakeLists.txt
index fbc40618..a0673003 100644
--- a/Source/Lib/Common/ASM_AVX2/CMakeLists.txt
+++ b/Source/Lib/Common/ASM_AVX2/CMakeLists.txt
@@ -1,35 +1,28 @@
-# 
+#
 # Copyright(c) 2019 Intel Corporation
 # SPDX - License - Identifier: BSD - 2 - Clause - Patent
-# 
-
+#
 # Common/ASM_AVX2 Directory CMakeLists.txt
 
 # Include Encoder Subdirectories
-include_directories(${PROJECT_SOURCE_DIR}/Source/API/)
-include_directories(${PROJECT_SOURCE_DIR}/Source/Lib/Common/Codec/)
-include_directories(${PROJECT_SOURCE_DIR}/Source/Lib/Common/C_DEFAULT/)
-include_directories(${PROJECT_SOURCE_DIR}/Source/Lib/Common/ASM_SSE2/)
-include_directories(${PROJECT_SOURCE_DIR}/Source/Lib/Common/ASM_SSSE3/)
-include_directories(${PROJECT_SOURCE_DIR}/Source/Lib/Common/ASM_SSE4_1/)
-include_directories(${PROJECT_SOURCE_DIR}/Source/Lib/Common/ASM_AVX2/)
+include_directories(${PROJECT_SOURCE_DIR}/Source/API/
+    ${PROJECT_SOURCE_DIR}/Source/Lib/Common/Codec/
+    ${PROJECT_SOURCE_DIR}/Source/Lib/Common/C_DEFAULT/
+    ${PROJECT_SOURCE_DIR}/Source/Lib/Common/ASM_SSE2/
+    ${PROJECT_SOURCE_DIR}/Source/Lib/Common/ASM_SSSE3/
+    ${PROJECT_SOURCE_DIR}/Source/Lib/Common/ASM_SSE4_1/
+    ${PROJECT_SOURCE_DIR}/Source/Lib/Common/ASM_AVX2/)
 link_directories(${PROJECT_SOURCE_DIR}/Source/Lib/Common/ASM_SSSE3/)
 
-
-if(UNIX)
-    # Intel Linux
-    if("${CMAKE_C_COMPILER_ID}" STREQUAL "Intel")
-        SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -fPIC -static-intel -w")
-    else()
-        SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -march=core-avx2")
-    endif()
-else()
+if(MSVC)
+    set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} /arch:AVX2")
+elseif(WIN32 AND CMAKE_C_COMPILER_ID STREQUAL "Intel")
     # Intel Windows (*Note - The Warning level /W0 should be made to /W4 at some point)
-    if("${CMAKE_C_COMPILER_ID}" STREQUAL "Intel")
-        SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} /W0 /Qwd10148 /Qwd10010 /Qwd10157")
-    else()
-        SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} /arch:AVX2 /MP")    
-    endif()
+    set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} /W0 /Qwd10148 /Qwd10010 /Qwd10157")
+elseif(UNIX AND CMAKE_C_COMPILER_ID STREQUAL "Intel")
+    set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -fPIC -static-intel -w")
+else()
+    set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -mavx2")
 endif()
 
 file(GLOB all_files
@@ -38,8 +31,4 @@ file(GLOB all_files
     "*.c")
 
 add_library(COMMON_ASM_AVX2
-    ${all_files}
-)
-
-
-
+    ${all_files})
diff --git a/Source/Lib/Common/ASM_SSE2/CMakeLists.txt b/Source/Lib/Common/ASM_SSE2/CMakeLists.txt
index a2633ffe..c01f4fe6 100644
--- a/Source/Lib/Common/ASM_SSE2/CMakeLists.txt
+++ b/Source/Lib/Common/ASM_SSE2/CMakeLists.txt
@@ -1,26 +1,19 @@
-# 
+#
 # Copyright(c) 2019 Intel Corporation
 # SPDX - License - Identifier: BSD - 2 - Clause - Patent
-# 
-
+#
 # ASM_SSE2 Directory CMakeLists.txt
 
 # Include Encoder Subdirectories
-include_directories (${PROJECT_SOURCE_DIR}/Source/API/)
-include_directories (${PROJECT_SOURCE_DIR}/Source/Lib/Common/Codec/)
-include_directories (${PROJECT_SOURCE_DIR}/Source/Lib/Common/C_DEFAULT/)
-include_directories (${PROJECT_SOURCE_DIR}/Source/Lib/Common/ASM_SSE2/)
-
-if(${CMAKE_SYSTEM_NAME} MATCHES "Windows")
-    SET(CMAKE_C_FLAGS "/MP")    
-endif(${CMAKE_SYSTEM_NAME} MATCHES "Windows")
+include_directories(${PROJECT_SOURCE_DIR}/Source/API/
+    ${PROJECT_SOURCE_DIR}/Source/Lib/Common/Codec/
+    ${PROJECT_SOURCE_DIR}/Source/Lib/Common/C_DEFAULT/
+    ${PROJECT_SOURCE_DIR}/Source/Lib/Common/ASM_SSE2/)
 
-if(CMAKE_C_COMPILER_ID STREQUAL "GNU")
+if(CMAKE_C_COMPILER_ID MATCHES "GNU|Clang")
     set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -msse2")
-endif()
-
-if(CMAKE_C_COMPILER_ID STREQUAL "Intel")
-    SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -fPIC -static-intel -w")
+elseif(CMAKE_C_COMPILER_ID STREQUAL "Intel")
+    set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -fPIC -static-intel -w")
 endif()
 
 file(GLOB all_files
@@ -29,9 +22,4 @@ file(GLOB all_files
     "*.c")
 
 add_library(COMMON_ASM_SSE2
-    ${all_files}
-)
-
-
-
-
+    ${all_files})
diff --git a/Source/Lib/Common/ASM_SSE4_1/CMakeLists.txt b/Source/Lib/Common/ASM_SSE4_1/CMakeLists.txt
index 50ff420f..0704e765 100644
--- a/Source/Lib/Common/ASM_SSE4_1/CMakeLists.txt
+++ b/Source/Lib/Common/ASM_SSE4_1/CMakeLists.txt
@@ -1,41 +1,28 @@
-# 
+#
 # Copyright(c) 2019 Intel Corporation
 # SPDX - License - Identifier: BSD - 2 - Clause - Patent
-# 
-
+#
 # ASM_SSE4.1 Directory CMakeLists.txt
 
 # Include Encoder Subdirectories
-include_directories (${PROJECT_SOURCE_DIR}/Source/API/)
-include_directories (${PROJECT_SOURCE_DIR}/Source/Lib/Common/Codec/)
-include_directories (${PROJECT_SOURCE_DIR}/Source/Lib/Common/C_DEFAULT/)
-include_directories (${PROJECT_SOURCE_DIR}/Source/Lib/Common/ASM_SSE2/)
-include_directories (${PROJECT_SOURCE_DIR}/Source/Lib/Common/ASM_SSSE3/)
-include_directories (${PROJECT_SOURCE_DIR}/Source/Lib/Common/ASM_SSE4_1/)
-include_directories (${PROJECT_SOURCE_DIR}/Source/Lib/Common/ASM_AVX2/)
-
-if(${CMAKE_SYSTEM_NAME} MATCHES "Windows")
-    SET(CMAKE_C_FLAGS "/MP")    
-endif(${CMAKE_SYSTEM_NAME} MATCHES "Windows")
-
-if(CMAKE_C_COMPILER_ID STREQUAL "GNU")
+include_directories(${PROJECT_SOURCE_DIR}/Source/API/
+    ${PROJECT_SOURCE_DIR}/Source/Lib/Common/Codec/
+    ${PROJECT_SOURCE_DIR}/Source/Lib/Common/C_DEFAULT/
+    ${PROJECT_SOURCE_DIR}/Source/Lib/Common/ASM_SSE2/
+    ${PROJECT_SOURCE_DIR}/Source/Lib/Common/ASM_SSSE3/
+    ${PROJECT_SOURCE_DIR}/Source/Lib/Common/ASM_SSE4_1/
+    ${PROJECT_SOURCE_DIR}/Source/Lib/Common/ASM_AVX2/)
+
+if(CMAKE_C_COMPILER_ID MATCHES "GNU|Clang")
     set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -msse4.1")
-endif()
-
-if(CMAKE_C_COMPILER_ID STREQUAL "Intel")
+elseif(CMAKE_C_COMPILER_ID STREQUAL "Intel")
     set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -fPIC -static-intel -w")
 endif()
 
-
 file(GLOB all_files
     "*.h"
     "*.asm"
     "*.c")
 
 add_library(COMMON_ASM_SSE4_1
-    ${all_files}
-)
-
-
-
-
+    ${all_files})
diff --git a/Source/Lib/Common/ASM_SSSE3/CMakeLists.txt b/Source/Lib/Common/ASM_SSSE3/CMakeLists.txt
index 65a4ab50..401b2a68 100644
--- a/Source/Lib/Common/ASM_SSSE3/CMakeLists.txt
+++ b/Source/Lib/Common/ASM_SSSE3/CMakeLists.txt
@@ -1,29 +1,22 @@
-﻿# 
+﻿#
 # Copyright(c) 2019 Intel Corporation
 # SPDX - License - Identifier: BSD - 2 - Clause - Patent
-# 
-
+#
 # ASM_SSSE3 Directory CMakeLists.txt
 
 # Include Encoder Subdirectories
-include_directories (${PROJECT_SOURCE_DIR}/Source/API/)
-include_directories (${PROJECT_SOURCE_DIR}/Source/Lib/Common/Codec/)
-include_directories (${PROJECT_SOURCE_DIR}/Source/Lib/Common/C_DEFAULT/)
-include_directories (${PROJECT_SOURCE_DIR}/Source/Lib/Common/ASM_SSE2/)
-include_directories (${PROJECT_SOURCE_DIR}/Source/Lib/Common/ASM_SSSE3/)
-include_directories (${PROJECT_SOURCE_DIR}/Source/Lib/Common/ASM_SSE4_1/)
-include_directories (${PROJECT_SOURCE_DIR}/Source/Lib/Common/ASM_AVX2/)
-
-if(${CMAKE_SYSTEM_NAME} MATCHES "Windows")
-    SET(CMAKE_C_FLAGS "/MP")    
-endif(${CMAKE_SYSTEM_NAME} MATCHES "Windows")
-
-if(CMAKE_C_COMPILER_ID STREQUAL "GNU")
-    set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -mssse3")
-endif()
-
-if(CMAKE_C_COMPILER_ID STREQUAL "Intel")
-    SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -fPIC -static-intel -w")
+include_directories(${PROJECT_SOURCE_DIR}/Source/API/
+    ${PROJECT_SOURCE_DIR}/Source/Lib/Common/Codec/
+    ${PROJECT_SOURCE_DIR}/Source/Lib/Common/C_DEFAULT/
+    ${PROJECT_SOURCE_DIR}/Source/Lib/Common/ASM_SSE2/
+    ${PROJECT_SOURCE_DIR}/Source/Lib/Common/ASM_SSSE3/
+    ${PROJECT_SOURCE_DIR}/Source/Lib/Common/ASM_SSE4_1/
+    ${PROJECT_SOURCE_DIR}/Source/Lib/Common/ASM_AVX2/)
+
+if(CMAKE_C_COMPILER_ID MATCHES "GNU|Clang")
+    set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -mssse3 -msse4.1")
+elseif(CMAKE_C_COMPILER_ID STREQUAL "Intel")
+    set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -fPIC -static-intel -w")
 endif()
 
 file(GLOB all_files
@@ -32,6 +25,4 @@ file(GLOB all_files
     "*.c")
 
 add_library(COMMON_ASM_SSSE3
-    ${all_files}
-)
-
+    ${all_files})
diff --git a/Source/Lib/Common/C_DEFAULT/CMakeLists.txt b/Source/Lib/Common/C_DEFAULT/CMakeLists.txt
index 045fabd7..77499cca 100644
--- a/Source/Lib/Common/C_DEFAULT/CMakeLists.txt
+++ b/Source/Lib/Common/C_DEFAULT/CMakeLists.txt
@@ -1,23 +1,17 @@
-# 
+#
 # Copyright(c) 2019 Intel Corporation
 # SPDX - License - Identifier: BSD - 2 - Clause - Patent
-# 
-
+#
 # C_DEFAULT Directory CMakeLists.txt
 
 # Include Encoder Subdirectories
-include_directories (${PROJECT_SOURCE_DIR}/Source/API/)
-include_directories (${PROJECT_SOURCE_DIR}/Source/Lib/Common/Codec/)
-include_directories (${PROJECT_SOURCE_DIR}/Source/Lib/Common/C_DEFAULT/)
-
-if(${CMAKE_SYSTEM_NAME} MATCHES "Windows")
-    SET(CMAKE_C_FLAGS "/MP")    
-endif(${CMAKE_SYSTEM_NAME} MATCHES "Windows")
+include_directories(${PROJECT_SOURCE_DIR}/Source/API/
+    ${PROJECT_SOURCE_DIR}/Source/Lib/Common/Codec/
+    ${PROJECT_SOURCE_DIR}/Source/Lib/Common/C_DEFAULT/)
 
 file(GLOB all_files
     "*.h"
     "*.c")
 
 add_library(COMMON_C_DEFAULT
-    ${all_files}
-)
+    ${all_files})
diff --git a/Source/Lib/Common/Codec/CMakeLists.txt b/Source/Lib/Common/Codec/CMakeLists.txt
index 786f0ed1..51f2a082 100644
--- a/Source/Lib/Common/Codec/CMakeLists.txt
+++ b/Source/Lib/Common/Codec/CMakeLists.txt
@@ -1,26 +1,25 @@
-# 
+#
 # Copyright(c) 2019 Intel Corporation
 # SPDX - License - Identifier: BSD - 2 - Clause - Patent
-# 
+#
 # Common/Codec Directory CMakeLists.txt
 
 # Include Encoder Subdirectories
-include_directories (${PROJECT_SOURCE_DIR}/Source/API/)
-include_directories (${PROJECT_SOURCE_DIR}/Source/Lib/Common/Codec/)
-include_directories (${PROJECT_SOURCE_DIR}/Source/Lib/Common/C_DEFAULT/)
-include_directories (${PROJECT_SOURCE_DIR}/Source/Lib/Common/ASM_SSE2/)
-include_directories (${PROJECT_SOURCE_DIR}/Source/Lib/Common/ASM_SSSE3/)
-include_directories (${PROJECT_SOURCE_DIR}/Source/Lib/Common/ASM_SSE4_1/)
-include_directories (${PROJECT_SOURCE_DIR}/Source/Lib/Common/ASM_AVX2/)
+include_directories(${PROJECT_SOURCE_DIR}/Source/API/
+    ${PROJECT_SOURCE_DIR}/Source/Lib/Common/Codec/
+    ${PROJECT_SOURCE_DIR}/Source/Lib/Common/C_DEFAULT/
+    ${PROJECT_SOURCE_DIR}/Source/Lib/Common/ASM_SSE2/
+    ${PROJECT_SOURCE_DIR}/Source/Lib/Common/ASM_SSSE3/
+    ${PROJECT_SOURCE_DIR}/Source/Lib/Common/ASM_SSE4_1/
+    ${PROJECT_SOURCE_DIR}/Source/Lib/Common/ASM_AVX2/)
 
-if(${CMAKE_SYSTEM_NAME} MATCHES "Windows")
-    SET(CMAKE_C_FLAGS "/MP")    
-endif(${CMAKE_SYSTEM_NAME} MATCHES "Windows")
+if(CMAKE_C_COMPILER_ID MATCHES "GNU|Clang")
+    set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -mssse3 -msse4.1")
+endif()
 
 file(GLOB all_files
     "*.h"
     "*.c")
 
 add_library(COMMON_CODEC
-    ${all_files}
-)
+    ${all_files})
diff --git a/Source/Lib/Encoder/Codec/CMakeLists.txt b/Source/Lib/Encoder/Codec/CMakeLists.txt
index 018f1f67..c1f20536 100644
--- a/Source/Lib/Encoder/Codec/CMakeLists.txt
+++ b/Source/Lib/Encoder/Codec/CMakeLists.txt
@@ -1,54 +1,34 @@
-# 
+#
 # Copyright(c) 2019 Intel Corporation
 # SPDX - License - Identifier: BSD - 2 - Clause - Patent
-# 
+#
 # EncoderLib Directory CMakeLists.txt
 
 # Include Encoder Subdirectories
-include_directories (${PROJECT_SOURCE_DIR}/Source/API/)
-include_directories (${PROJECT_SOURCE_DIR}/Source/Lib/Common/Codec/)
-include_directories (${PROJECT_SOURCE_DIR}/Source/Lib/Common/C_DEFAULT/)
-include_directories (${PROJECT_SOURCE_DIR}/Source/Lib/Common/ASM_SSE2/)
-include_directories (${PROJECT_SOURCE_DIR}/Source/Lib/Common/ASM_SSSE3/)
-include_directories (${PROJECT_SOURCE_DIR}/Source/Lib/Common/ASM_SSE4_1/)
-include_directories (${PROJECT_SOURCE_DIR}/Source/Lib/Common/ASM_AVX2/)
-include_directories (${PROJECT_SOURCE_DIR}/Source/Lib/Encoder/Codec/)
-
-
-link_directories (${PROJECT_SOURCE_DIR}/Source/Lib/Common/ASM_SSE2/)
-link_directories (${PROJECT_SOURCE_DIR}/Source/Lib/Common/C_DEFAULT/)
-link_directories (${PROJECT_SOURCE_DIR}/Source/Lib/Common/ASM_SSSE3/)
-link_directories (${PROJECT_SOURCE_DIR}/Source/Lib/Common/ASM_SSE4_1/)
-link_directories (${PROJECT_SOURCE_DIR}/Source/Lib/Common/ASM_AVX2/)
-link_directories (${PROJECT_SOURCE_DIR}/Source/Lib/Common/Codec/)
-
-set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${PROJECT_SOURCE_DIR}/Bin/${CMAKE_BUILD_TYPE}/)
-set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${PROJECT_SOURCE_DIR}/Bin/${CMAKE_BUILD_TYPE}/)
-set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${PROJECT_SOURCE_DIR}/Bin/${CMAKE_BUILD_TYPE}/)
-
-if(${CMAKE_SYSTEM_NAME} MATCHES "Windows")
-   SET(CMAKE_C_FLAGS "/MP")    
-endif(${CMAKE_SYSTEM_NAME} MATCHES "Windows")
+include_directories(${PROJECT_SOURCE_DIR}/Source/API/
+    ${PROJECT_SOURCE_DIR}/Source/Lib/Common/Codec/
+    ${PROJECT_SOURCE_DIR}/Source/Lib/Common/C_DEFAULT/
+    ${PROJECT_SOURCE_DIR}/Source/Lib/Common/ASM_SSE2/
+    ${PROJECT_SOURCE_DIR}/Source/Lib/Common/ASM_SSSE3/
+    ${PROJECT_SOURCE_DIR}/Source/Lib/Common/ASM_SSE4_1/
+    ${PROJECT_SOURCE_DIR}/Source/Lib/Common/ASM_AVX2/
+    ${PROJECT_SOURCE_DIR}/Source/Lib/Encoder/Codec/)
+
+link_directories(${PROJECT_SOURCE_DIR}/Source/Lib/Common/ASM_SSE2/
+    ${PROJECT_SOURCE_DIR}/Source/Lib/Common/C_DEFAULT/
+    ${PROJECT_SOURCE_DIR}/Source/Lib/Common/ASM_SSSE3/
+    ${PROJECT_SOURCE_DIR}/Source/Lib/Common/ASM_SSE4_1/
+    ${PROJECT_SOURCE_DIR}/Source/Lib/Common/ASM_AVX2/
+    ${PROJECT_SOURCE_DIR}/Source/Lib/Common/Codec/)
 
 file(GLOB all_files
     "*.h"
     "*.c")
- 
+
 # Encoder Lib Source Files
 add_library(SvtAv1Enc SHARED
-    ${all_files}
-)
-    
-if(CMAKE_SYSTEM_NAME STREQUAL "Linux")
-target_link_libraries(SvtAv1Enc
-    COMMON_CODEC
-    COMMON_C_DEFAULT
-    COMMON_ASM_SSE2
-    COMMON_ASM_SSSE3
-    COMMON_ASM_SSE4_1
-    COMMON_ASM_AVX2
-    m)
-else()
+    ${all_files})
+
 target_link_libraries(SvtAv1Enc
     COMMON_CODEC
     COMMON_C_DEFAULT
@@ -56,6 +36,10 @@ target_link_libraries(SvtAv1Enc
     COMMON_ASM_SSSE3
     COMMON_ASM_SSE4_1
     COMMON_ASM_AVX2)
+
+if(UNIX)
+    target_link_libraries(SvtAv1Enc
+        m)
 endif()
 
 if(NOT DEFINED CMAKE_INSTALL_LIBDIR)
@@ -65,7 +49,7 @@ endif()
 if(NOT DEFINED CMAKE_INSTALL_INCLUDEDIR)
     set(CMAKE_INSTALL_INCLUDEDIR "include/svt-av1")
 endif()
-    
+
 configure_file(../pkg-config.pc.in ${CMAKE_BINARY_DIR}/SvtAv1Enc.pc @ONLY)
 install(FILES ${CMAKE_BINARY_DIR}/SvtAv1Enc.pc DESTINATION "${CMAKE_INSTALL_LIBDIR}/pkgconfig")
 install(TARGETS SvtAv1Enc DESTINATION "${CMAKE_INSTALL_LIBDIR}")
-- 
2.21.0

